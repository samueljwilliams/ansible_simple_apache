---

- name: apache vpc
  ec2_vpc_net_facts:
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_access_key }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": apache
  register: aws_vpc_facts

- name: set vpc id fact
  set_fact:
    aws_vpc_id="{{ aws_vpc_facts.vpcs[0].id }}"

- name: apache vpc subnets
  ec2_vpc_subnet_facts:
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_access_key }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ aws_vpc_id }}"
  register: aws_vpc_subnets_facts

- name: set vpc subnets fact
  set_fact:
    aws_vpc_subnets="{{ aws_vpc_subnets_facts.subnets }}"

- name: set random subnet
  set_fact:
    prv_subnet="{{ aws_vpc_subnets | random }}"

- name: provision apache node
  local_action:
    module: ec2
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_access_key }}"
    region: "{{ aws_region }}"
    key_name: apache
    group: apache
    instance_type: t2.nano
    image: "{{ aws_ami[aws_region] }}"
    wait: yes
    wait_timeout: 600
    count: 1
    instance_profile_name: apache
    instance_tags:
      Name: apache
    ebs_optimized: no
    monitoring: no
    vpc_subnet_id: "{{ prv_subnet.id }}"
    assign_public_ip: yes
  register: ec2

- name: wait for ssh to be available
  wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
  with_items: "{{ ec2.instances }}"

